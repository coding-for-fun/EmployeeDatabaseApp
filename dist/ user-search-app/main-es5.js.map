{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/page-not-found/page-not-found.component.ts","webpack:///src/app/page-not-found/page-not-found.component.html","webpack:///src/app/shared/services/api.service.ts","webpack:///src/app/shared/services/data.service.ts","webpack:///src/app/user-detail/user-detail.component.ts","webpack:///src/app/user-detail/user-detail.component.html","webpack:///src/app/user-list/user-list.component.ts","webpack:///src/app/user-list/user-list.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","HeaderComponent","appTitle","PageNotFoundComponent","ApiService","http","dataService","baseUrl","get","pipe","data","error","console","log","providedIn","DataService","userListData","i","length","userListObj","first_name","last_name","email","push","userDetail","userDetailData","job_title","department","language","company_name","gender","preferred_color","UserDetailComponent","route","apiService","columnVal","paramMap","subscribe","p","userId","isLoading","getUserDetail","setUserDetailData","displayUserDetail","success","err","userData","getUserDetailData","UserListComponent","router","userDataService","users","getUserListData","search","getUserList","setUserListData","displayCityList","selectedRow","navigate","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UserDetailComponent } from './user-detail/user-detail.component';\nimport {PageNotFoundComponent} from './page-not-found/page-not-found.component'\n\nconst routes: Routes = [\n  { path: 'users', component: UserListComponent },\n  { path: 'users/:id', component: UserDetailComponent },\n  { path: '', redirectTo: '/userList', pathMatch: 'full' },\n  { path: '**', component: PageNotFoundComponent  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'user-search-app';\n\n  constructor(){}\n\n  ngOnInit(){\n    \n  }\n}\n","<div class=\"backClr\">\n    <app-header></app-header>\n    <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { UserDetailComponent } from './user-detail/user-detail.component';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatInputModule } from '@angular/material/input';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatTableModule } from '@angular/material/table';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    UserDetailComponent,\n    UserListComponent,\n    PageNotFoundComponent,\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    AppRoutingModule,\n    MatProgressSpinnerModule,\n    MatToolbarModule,\n    HttpClientModule,\n    MatTableModule,\n    MatInputModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  appTitle = 'Welcome to Employee App!!';\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar>\n  <span>{{appTitle}} </span>\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Page Not Found!!!</h1>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, from, Subject, throwError } from 'rxjs';\nimport { DataService } from './data.service';\nimport { map } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ApiService {\n\n  baseUrl = 'http://localhost:3000/'//'https://jsonplaceholder.typicode.com/';\n\n  constructor(private http: HttpClient, private dataService: DataService) { }\n\n  getUserList(id?) {\n    return this.http.get(`${this.baseUrl}contacts`).pipe(map(\n      data => data,\n      error => throwError(error)\n    ))\n  }\n\n  getUserDetail(id) {\n    console.log('getUserDetail==', id)\n    return this.http.get(`${this.baseUrl}contacts/${id}`).pipe(map(\n      data => data,\n      error => throwError(error)\n    ))\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { UserDetail, UserList } from '../modal/data-modal';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  userListData: UserList[] = [];\n  userDetailData: UserDetail;\n\n  constructor() { }\n\n  setUserListData(data) {\n    for (let i = 0; i < data.length; i++) {\n      let userListObj: any = {};\n      userListObj.first_name = data[i].first_name;\n      userListObj.last_name = data[i].last_name;\n      userListObj.email = data[i].email;\n      userListObj.id = data[i].id;\n      this.userListData.push(userListObj);\n    };\n  }\n\n  setUserDetailData(userDetail) {\n    this.userDetailData = {\n      id: userDetail.id,\n      job_title: userDetail.job_title,\n      department: userDetail.department,\n      language: userDetail.language,\n      email: userDetail.email,\n      company_name: userDetail.company_name,\n      gender: userDetail.gender,\n      preferred_color: userDetail.preferred_color\n    }\n  }\n\n  getUserListData() {\n    return this.userListData;\n  }\n\n  getUserDetailData() {\n    return this.userDetailData;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../shared/services/data.service';\nimport { ApiService } from '../shared/services/api.service';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { UserDetail } from '../shared/modal/data-modal';\n\n@Component({\n  selector: 'app-user-detail',\n  templateUrl: './user-detail.component.html',\n  styleUrls: ['./user-detail.component.scss']\n})\nexport class UserDetailComponent implements OnInit {\n\n  success: boolean;\n  isLoading: boolean;\n  userDetailData: UserDetail[] = [];\n  userId: string;\n  columnVal: string[] = ['job_title', 'department', 'company_name','language', 'gender', 'preferred_color'];\n\n  constructor(\n    private route: ActivatedRoute,\n    private dataService: DataService,\n    private apiService: ApiService\n  ) {\n    this.route.paramMap.subscribe((p) => {\n      this.userId = p['params']['id'];\n      this.isLoading = true;\n      this.apiService.getUserDetail(this.userId).subscribe(\n        (data) => {\n          this.dataService.setUserDetailData(data);\n          this.displayUserDetail();\n          this.success = true;\n          this.isLoading = false;\n        }, err => {\n          this.success = false;\n          this.isLoading = false;\n          console.log('err occured')\n        })\n    });\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  displayUserDetail() {\n    let userData = this.dataService.getUserDetailData();\n    (userData && userData.id) ? this.userDetailData.push(userData) : this.userDetailData=[]; \n  }\n\n}\n","<div class=\"backgroundClr\">\n    <h1>Employee Id: {{userId}} </h1>\n\n    <div *ngIf=\"success && userDetailData.length>0\">\n        <table mat-table [dataSource]=\"userDetailData\" class=\"mat-elevation-z8\"> -->\n\n            <!-- job_title Column -->\n            <ng-container matColumnDef=\"job_title\">\n                <th mat-header-cell *matHeaderCellDef> Job Title </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.job_title}} </td>\n            </ng-container>\n\n            <!-- department Column -->\n            <ng-container matColumnDef=\"department\">\n                <th mat-header-cell *matHeaderCellDef> Department </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.department}} </td>\n            </ng-container>\n\n            <!-- company_name Column -->\n            <ng-container matColumnDef=\"company_name\">\n                <th mat-header-cell *matHeaderCellDef> Company</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.company_name}} </td>\n            </ng-container>\n\n            <!-- gender Column -->\n            <ng-container matColumnDef=\"gender\">\n                <th mat-header-cell *matHeaderCellDef> Gender</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.gender}} </td>\n            </ng-container>\n\n            <!-- language Column -->\n            <ng-container matColumnDef=\"language\">\n                <th mat-header-cell *matHeaderCellDef> Language</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.language}} </td>\n            </ng-container>\n\n            <!-- preferred_color Column -->\n            <ng-container matColumnDef=\"preferred_color\">\n                <th mat-header-cell *matHeaderCellDef> Preferred Color</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.preferred_color}} </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"columnVal\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: columnVal;\"></tr>\n        </table>\n    </div>\n\n    <div *ngIf=\"!isLoading && !success\">No Data</div>\n\n    \n    <mat-progress-spinner *ngIf=\"isLoading\" mode=\"indeterminate\"></mat-progress-spinner>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../shared/services/data.service';\nimport { ApiService } from '../shared/services/api.service';\nimport { UserList } from '../shared/modal/data-modal'\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss']\n})\nexport class UserListComponent implements OnInit {\n\n  success: boolean;\n  isLoading: boolean;\n\n  columnVal: string[] = ['id', 'first-name', 'last-name', 'email'];\n  userListData: UserList[];\n  userId: number;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private userDataService: DataService,\n    private apiService: ApiService) {\n  }\n\n  ngOnInit(): void {\n    let users = this.userDataService.getUserListData();\n    console.log('user list data =' , users)\n    if(users && users.length > 0){\n      this.userListData = users;\n      this.success = true;\n      this.isLoading  = false;\n    } else {\n      this.search();\n    }\n  }\n\n  search(){\n    this.isLoading = true;\n    this.apiService.getUserList().subscribe((data) => {\n      this.userDataService.setUserListData(data);\n      this.displayCityList();\n      this.success = true;\n      this.isLoading = false;\n    },\n      err => {\n        this.success = false;\n        this.isLoading = false;\n        console.log('err occured')\n      })\n  }\n\n  displayCityList() {\n    this.userListData = this.userDataService.getUserListData();\n  }\n\n  gotoUser(selectedRow) {\n    const userId = selectedRow ? selectedRow.id : null;\n    userId ? this.router.navigate(['/users', userId ]) : console.log('error in user selected');\n    \n  }\n\n}\n","<mat-progress-spinner *ngIf=\"isLoading\" mode=\"indeterminate\"></mat-progress-spinner>\n<!-- \n<mat-form-field class=\"example-form-field\" appearance=\"fill\">\n    <mat-label>Enter Employee Id</mat-label>\n    <input matInput type=\"text\" [(ngModel)]=\"userId\">\n    <button *ngIf=\"userId\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"search()\">\n      <mat-icon>search</mat-icon>\n    </button>\n  </mat-form-field> -->\n\n<div *ngIf=\"success && userListData.length>0\">\n    <table mat-table [dataSource]=\"userListData\" class=\"mat-elevation-z8\">\n\n        <!-- Id Column -->\n        <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef>  Id </th>\n            <td mat-cell *matCellDef=\"let element\" (onClick)=\"gotoUser(element.id)\"> {{element.id}} </td>\n        </ng-container>\n\n        <!-- First Name Column -->\n        <ng-container matColumnDef=\"first-name\">\n            <th mat-header-cell *matHeaderCellDef> First Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.first_name}}  </td>\n        </ng-container>\n\n        <!-- Last Name Column -->\n        <ng-container matColumnDef=\"last-name\">\n            <th mat-header-cell *matHeaderCellDef> Last Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.last_name}} </td>\n        </ng-container>\n\n        <!-- Email Column -->\n        <ng-container matColumnDef=\"email\">\n            <th mat-header-cell *matHeaderCellDef> Email </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"columnVal\"></tr>\n        <tr mat-row (click)=\"gotoUser(row)\" *matRowDef=\"let row; columns: columnVal;\"></tr>\n    </table>\n</div>\n\n<div *ngIf=\"!isLoading && !success\">No Data</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}