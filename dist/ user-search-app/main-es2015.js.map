{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/shared/services/api.service.ts","./src/app/shared/services/data.service.ts","./src/app/user-detail/user-detail.component.ts","./src/app/user-detail/user-detail.component.html","./src/app/user-list/user-list.component.ts","./src/app/user-list/user-list.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UserDetailComponent } from './user-detail/user-detail.component';\nimport {PageNotFoundComponent} from './page-not-found/page-not-found.component'\n\nconst routes: Routes = [\n  { path: 'users', component: UserListComponent },\n  { path: 'users/:id', component: UserDetailComponent },\n  { path: '', redirectTo: '/userList', pathMatch: 'full' },\n  { path: '**', component: PageNotFoundComponent  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'user-search-app';\n\n  constructor(){}\n\n  ngOnInit(){\n    \n  }\n}\n","<div class=\"backClr\">\n    <app-header></app-header>\n    <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { UserDetailComponent } from './user-detail/user-detail.component';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatInputModule } from '@angular/material/input';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatTableModule } from '@angular/material/table';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    UserDetailComponent,\n    UserListComponent,\n    PageNotFoundComponent,\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    AppRoutingModule,\n    MatProgressSpinnerModule,\n    MatToolbarModule,\n    HttpClientModule,\n    MatTableModule,\n    MatInputModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  appTitle = 'Welcome to Employee App!!';\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar>\n  <span>{{appTitle}} </span>\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Page Not Found!!!</h1>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, from, Subject, throwError } from 'rxjs';\nimport { DataService } from './data.service';\nimport { map } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ApiService {\n\n  baseUrl = 'http://localhost:3000/'//'https://jsonplaceholder.typicode.com/';\n\n  constructor(private http: HttpClient, private dataService: DataService) { }\n\n  getUserList(id?) {\n    return this.http.get(`${this.baseUrl}contacts`).pipe(map(\n      data => data,\n      error => throwError(error)\n    ))\n  }\n\n  getUserDetail(id) {\n    console.log('getUserDetail==', id)\n    return this.http.get(`${this.baseUrl}contacts/${id}`).pipe(map(\n      data => data,\n      error => throwError(error)\n    ))\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { UserDetail, UserList } from '../modal/data-modal';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  userListData: UserList[] = [];\n  userDetailData: UserDetail;\n\n  constructor() { }\n\n  setUserListData(data) {\n    for (let i = 0; i < data.length; i++) {\n      let userListObj: any = {};\n      userListObj.first_name = data[i].first_name;\n      userListObj.last_name = data[i].last_name;\n      userListObj.email = data[i].email;\n      userListObj.id = data[i].id;\n      this.userListData.push(userListObj);\n    };\n  }\n\n  setUserDetailData(userDetail) {\n    this.userDetailData = {\n      id: userDetail.id,\n      job_title: userDetail.job_title,\n      department: userDetail.department,\n      language: userDetail.language,\n      email: userDetail.email,\n      company_name: userDetail.company_name,\n      gender: userDetail.gender,\n      preferred_color: userDetail.preferred_color\n    }\n  }\n\n  getUserListData() {\n    return this.userListData;\n  }\n\n  getUserDetailData() {\n    return this.userDetailData;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../shared/services/data.service';\nimport { ApiService } from '../shared/services/api.service';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { UserDetail } from '../shared/modal/data-modal';\n\n@Component({\n  selector: 'app-user-detail',\n  templateUrl: './user-detail.component.html',\n  styleUrls: ['./user-detail.component.scss']\n})\nexport class UserDetailComponent implements OnInit {\n\n  success: boolean;\n  isLoading: boolean;\n  userDetailData: UserDetail[] = [];\n  userId: string;\n  columnVal: string[] = ['job_title', 'department', 'company_name','language', 'gender', 'preferred_color'];\n\n  constructor(\n    private route: ActivatedRoute,\n    private dataService: DataService,\n    private apiService: ApiService\n  ) {\n    this.route.paramMap.subscribe((p) => {\n      this.userId = p['params']['id'];\n      this.isLoading = true;\n      this.apiService.getUserDetail(this.userId).subscribe(\n        (data) => {\n          this.dataService.setUserDetailData(data);\n          this.displayUserDetail();\n          this.success = true;\n          this.isLoading = false;\n        }, err => {\n          this.success = false;\n          this.isLoading = false;\n          console.log('err occured')\n        })\n    });\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  displayUserDetail() {\n    let userData = this.dataService.getUserDetailData();\n    (userData && userData.id) ? this.userDetailData.push(userData) : this.userDetailData=[]; \n  }\n\n}\n","<div class=\"backgroundClr\">\n    <h1>Employee Id: {{userId}} </h1>\n\n    <div *ngIf=\"success && userDetailData.length>0\">\n        <table mat-table [dataSource]=\"userDetailData\" class=\"mat-elevation-z8\"> -->\n\n            <!-- job_title Column -->\n            <ng-container matColumnDef=\"job_title\">\n                <th mat-header-cell *matHeaderCellDef> Job Title </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.job_title}} </td>\n            </ng-container>\n\n            <!-- department Column -->\n            <ng-container matColumnDef=\"department\">\n                <th mat-header-cell *matHeaderCellDef> Department </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.department}} </td>\n            </ng-container>\n\n            <!-- company_name Column -->\n            <ng-container matColumnDef=\"company_name\">\n                <th mat-header-cell *matHeaderCellDef> Company</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.company_name}} </td>\n            </ng-container>\n\n            <!-- gender Column -->\n            <ng-container matColumnDef=\"gender\">\n                <th mat-header-cell *matHeaderCellDef> Gender</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.gender}} </td>\n            </ng-container>\n\n            <!-- language Column -->\n            <ng-container matColumnDef=\"language\">\n                <th mat-header-cell *matHeaderCellDef> Language</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.language}} </td>\n            </ng-container>\n\n            <!-- preferred_color Column -->\n            <ng-container matColumnDef=\"preferred_color\">\n                <th mat-header-cell *matHeaderCellDef> Preferred Color</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.preferred_color}} </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"columnVal\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: columnVal;\"></tr>\n        </table>\n    </div>\n\n    <div *ngIf=\"!isLoading && !success\">No Data</div>\n\n    \n    <mat-progress-spinner *ngIf=\"isLoading\" mode=\"indeterminate\"></mat-progress-spinner>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../shared/services/data.service';\nimport { ApiService } from '../shared/services/api.service';\nimport { UserList } from '../shared/modal/data-modal'\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss']\n})\nexport class UserListComponent implements OnInit {\n\n  success: boolean;\n  isLoading: boolean;\n\n  columnVal: string[] = ['id', 'first-name', 'last-name', 'email'];\n  userListData: UserList[];\n  userId: number;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private userDataService: DataService,\n    private apiService: ApiService) {\n  }\n\n  ngOnInit(): void {\n    let users = this.userDataService.getUserListData();\n    console.log('user list data =' , users)\n    if(users && users.length > 0){\n      this.userListData = users;\n      this.success = true;\n      this.isLoading  = false;\n    } else {\n      this.search();\n    }\n  }\n\n  search(){\n    this.isLoading = true;\n    this.apiService.getUserList().subscribe((data) => {\n      this.userDataService.setUserListData(data);\n      this.displayCityList();\n      this.success = true;\n      this.isLoading = false;\n    },\n      err => {\n        this.success = false;\n        this.isLoading = false;\n        console.log('err occured')\n      })\n  }\n\n  displayCityList() {\n    this.userListData = this.userDataService.getUserListData();\n  }\n\n  gotoUser(selectedRow) {\n    const userId = selectedRow ? selectedRow.id : null;\n    userId ? this.router.navigate(['/users', userId ]) : console.log('error in user selected');\n    \n  }\n\n}\n","<mat-progress-spinner *ngIf=\"isLoading\" mode=\"indeterminate\"></mat-progress-spinner>\n<!-- \n<mat-form-field class=\"example-form-field\" appearance=\"fill\">\n    <mat-label>Enter Employee Id</mat-label>\n    <input matInput type=\"text\" [(ngModel)]=\"userId\">\n    <button *ngIf=\"userId\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"search()\">\n      <mat-icon>search</mat-icon>\n    </button>\n  </mat-form-field> -->\n\n<div *ngIf=\"success && userListData.length>0\">\n    <table mat-table [dataSource]=\"userListData\" class=\"mat-elevation-z8\">\n\n        <!-- Id Column -->\n        <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef>  Id </th>\n            <td mat-cell *matCellDef=\"let element\" (onClick)=\"gotoUser(element.id)\"> {{element.id}} </td>\n        </ng-container>\n\n        <!-- First Name Column -->\n        <ng-container matColumnDef=\"first-name\">\n            <th mat-header-cell *matHeaderCellDef> First Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.first_name}}  </td>\n        </ng-container>\n\n        <!-- Last Name Column -->\n        <ng-container matColumnDef=\"last-name\">\n            <th mat-header-cell *matHeaderCellDef> Last Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.last_name}} </td>\n        </ng-container>\n\n        <!-- Email Column -->\n        <ng-container matColumnDef=\"email\">\n            <th mat-header-cell *matHeaderCellDef> Email </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"columnVal\"></tr>\n        <tr mat-row (click)=\"gotoUser(row)\" *matRowDef=\"let row; columns: columnVal;\"></tr>\n    </table>\n</div>\n\n<div *ngIf=\"!isLoading && !success\">No Data</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}